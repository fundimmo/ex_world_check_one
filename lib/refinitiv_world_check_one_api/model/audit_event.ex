# NOTE: This file is auto generated by OpenAPI Generator 6.3.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule RefinitivWorldCheckOneAPI.Model.AuditEvent do
  @moduledoc """
  Abstract audit event object
  """

  @derive [Poison.Encoder]
  defstruct [
    :id,
    :objectId,
    :entityType,
    :eventDate,
    :actionType,
    :sourceType,
    :actionedByUserId,
    :actionedByUserName,
    :note,
    :auditEventToDate,
    :details
  ]

  @type t :: %__MODULE__{
    :id => String.t,
    :objectId => String.t,
    :entityType => RefinitivWorldCheckOneAPI.Model.AuditEntityType.t,
    :eventDate => DateTime.t,
    :actionType => RefinitivWorldCheckOneAPI.Model.AuditEventActionType.t,
    :sourceType => RefinitivWorldCheckOneAPI.Model.AuditEventSourceType.t | nil,
    :actionedByUserId => String.t,
    :actionedByUserName => String.t,
    :note => String.t | nil,
    :auditEventToDate => DateTime.t | nil,
    :details => RefinitivWorldCheckOneAPI.Model.AbstractAuditDetails.t
  }
end

defimpl Poison.Decoder, for: RefinitivWorldCheckOneAPI.Model.AuditEvent do
  import RefinitivWorldCheckOneAPI.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:entityType, :struct, RefinitivWorldCheckOneAPI.Model.AuditEntityType, options)
    |> deserialize(:actionType, :struct, RefinitivWorldCheckOneAPI.Model.AuditEventActionType, options)
    |> deserialize(:sourceType, :struct, RefinitivWorldCheckOneAPI.Model.AuditEventSourceType, options)
    |> deserialize(:details, :struct, RefinitivWorldCheckOneAPI.Model.AbstractAuditDetails, options)
  end
end

