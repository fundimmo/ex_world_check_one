# NOTE: This file is auto generated by OpenAPI Generator 6.3.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule RefinitivWorldCheckOneAPI.Model.Case do
  @moduledoc """
  Defines full Case data returned when retrieving a Case. Extends [NewCase](#NewCase).
  """

  @derive [Poison.Encoder]
  defstruct [
    :caseId,
    :name,
    :providerTypes,
    :customFields,
    :secondaryFields,
    :nameTransposition,
    :note,
    :groupId,
    :entityType,
    :caseSystemId,
    :caseScreeningState,
    :lifecycleState,
    :assignee,
    :creator,
    :modifier,
    :creationDate,
    :modificationDate,
    :outstandingActions,
    :lastScreenedDatesByProviderType,
    :providerTypeDetails,
    :aggregatedResultSummaries
  ]

  @type t :: %__MODULE__{
    :caseId => String.t | nil,
    :name => String.t,
    :providerTypes => [RefinitivWorldCheckOneAPI.Model.ProviderType.t],
    :customFields => [RefinitivWorldCheckOneAPI.Model.Field.t] | nil,
    :secondaryFields => [RefinitivWorldCheckOneAPI.Model.Field.t] | nil,
    :nameTransposition => boolean() | nil,
    :note => String.t | nil,
    :groupId => String.t,
    :entityType => String.t,
    :caseSystemId => String.t | nil,
    :caseScreeningState => %{optional(String.t) => String.t} | nil,
    :lifecycleState => String.t | nil,
    :assignee => RefinitivWorldCheckOneAPI.Model.UserSummary.t | nil,
    :creator => RefinitivWorldCheckOneAPI.Model.UserSummary.t | nil,
    :modifier => RefinitivWorldCheckOneAPI.Model.UserSummary.t | nil,
    :creationDate => DateTime.t | nil,
    :modificationDate => DateTime.t | nil,
    :outstandingActions => boolean() | nil,
    :lastScreenedDatesByProviderType => %{optional(String.t) => DateTime.t} | nil,
    :providerTypeDetails => RefinitivWorldCheckOneAPI.Model.ProviderTypeDetails.t | nil,
    :aggregatedResultSummaries => RefinitivWorldCheckOneAPI.Model.CaseResultSummaries.t | nil
  }
end

defimpl Poison.Decoder, for: RefinitivWorldCheckOneAPI.Model.Case do
  import RefinitivWorldCheckOneAPI.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:providerTypes, :list, RefinitivWorldCheckOneAPI.Model.ProviderType, options)
    |> deserialize(:customFields, :list, RefinitivWorldCheckOneAPI.Model.Field, options)
    |> deserialize(:secondaryFields, :list, RefinitivWorldCheckOneAPI.Model.Field, options)
    |> deserialize(:assignee, :struct, RefinitivWorldCheckOneAPI.Model.UserSummary, options)
    |> deserialize(:creator, :struct, RefinitivWorldCheckOneAPI.Model.UserSummary, options)
    |> deserialize(:modifier, :struct, RefinitivWorldCheckOneAPI.Model.UserSummary, options)
    |> deserialize(:providerTypeDetails, :struct, RefinitivWorldCheckOneAPI.Model.ProviderTypeDetails, options)
    |> deserialize(:aggregatedResultSummaries, :struct, RefinitivWorldCheckOneAPI.Model.CaseResultSummaries, options)
  end
end

