# NOTE: This file is auto generated by OpenAPI Generator 6.3.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule RefinitivWorldCheckOneAPI.Model.Result do
  @moduledoc """
  Result found after performing a synchronous screening of a Case. This contains the abstract case screening result details plus includes identity documents and important events 
  """

  @derive [Poison.Encoder]
  defstruct [
    :resultId,
    :referenceId,
    :matchStrength,
    :matchScore,
    :matchedTerm,
    :matchedTerms,
    :submittedTerm,
    :matchedNameType,
    :secondaryFieldResults,
    :sources,
    :categories,
    :creationDate,
    :modificationDate,
    :lastAlertDate,
    :modifier,
    :resolution,
    :resultReview,
    :primaryName,
    :events,
    :countryLinks,
    :identityDocuments,
    :category,
    :providerType,
    :gender,
    :entityCreationDate,
    :entityModificationDate,
    :pepStatus,
    :actionTypes
  ]

  @type t :: %__MODULE__{
    :resultId => String.t | nil,
    :referenceId => String.t,
    :matchStrength => String.t | nil,
    :matchScore => float() | nil,
    :matchedTerm => String.t | nil,
    :matchedTerms => [RefinitivWorldCheckOneAPI.Model.MatchedTerm.t] | nil,
    :submittedTerm => String.t | nil,
    :matchedNameType => String.t | nil,
    :secondaryFieldResults => [RefinitivWorldCheckOneAPI.Model.SecondaryFieldResult.t] | nil,
    :sources => [String.t] | nil,
    :categories => [String.t] | nil,
    :creationDate => DateTime.t | nil,
    :modificationDate => DateTime.t | nil,
    :lastAlertDate => DateTime.t | nil,
    :modifier => RefinitivWorldCheckOneAPI.Model.UserSummary.t | nil,
    :resolution => RefinitivWorldCheckOneAPI.Model.Resolution.t | nil,
    :resultReview => RefinitivWorldCheckOneAPI.Model.Review.t | nil,
    :primaryName => String.t | nil,
    :events => [RefinitivWorldCheckOneAPI.Model.Event.t] | nil,
    :countryLinks => [RefinitivWorldCheckOneAPI.Model.CountryLink.t] | nil,
    :identityDocuments => [RefinitivWorldCheckOneAPI.Model.IdentityDocument.t] | nil,
    :category => String.t | nil,
    :providerType => String.t | nil,
    :gender => String.t | nil,
    :entityCreationDate => DateTime.t | nil,
    :entityModificationDate => DateTime.t | nil,
    :pepStatus => String.t | nil,
    :actionTypes => [String.t] | nil
  }
end

defimpl Poison.Decoder, for: RefinitivWorldCheckOneAPI.Model.Result do
  import RefinitivWorldCheckOneAPI.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:matchedTerms, :list, RefinitivWorldCheckOneAPI.Model.MatchedTerm, options)
    |> deserialize(:secondaryFieldResults, :list, RefinitivWorldCheckOneAPI.Model.SecondaryFieldResult, options)
    |> deserialize(:modifier, :struct, RefinitivWorldCheckOneAPI.Model.UserSummary, options)
    |> deserialize(:resolution, :struct, RefinitivWorldCheckOneAPI.Model.Resolution, options)
    |> deserialize(:resultReview, :struct, RefinitivWorldCheckOneAPI.Model.Review, options)
    |> deserialize(:events, :list, RefinitivWorldCheckOneAPI.Model.Event, options)
    |> deserialize(:countryLinks, :list, RefinitivWorldCheckOneAPI.Model.CountryLink, options)
    |> deserialize(:identityDocuments, :list, RefinitivWorldCheckOneAPI.Model.IdentityDocument, options)
  end
end

