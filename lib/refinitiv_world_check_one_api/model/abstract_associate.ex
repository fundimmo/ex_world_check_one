# NOTE: This file is auto generated by OpenAPI Generator 6.3.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule RefinitivWorldCheckOneAPI.Model.AbstractAssociate do
  @moduledoc """
  The `AbstractAssociate` subclasses corresponding to each type of entity are:  * `COUNTRY`: `CountryAssociate` * `INDIVIDUAL`: `IndividualAssociate` * `ORGANISATION`: `OrganisationAssociate` * `VESSEL`: `VesselAssociate` 
  """

  @derive [Poison.Encoder]
  defstruct [
    :associateEntityType,
    :entityType,
    :reversed,
    :targetEntityId,
    :targetExternalImportId,
    :type,
    :targetPrimaryName,
    :creationDate,
    :modificationDate,
    :updateCategory,
    :category,
    :targetCategories
  ]

  @type t :: %__MODULE__{
    :associateEntityType => String.t,
    :entityType => String.t,
    :reversed => boolean() | nil,
    :targetEntityId => String.t | nil,
    :targetExternalImportId => String.t | nil,
    :type => String.t | nil,
    :targetPrimaryName => String.t | nil,
    :creationDate => DateTime.t | nil,
    :modificationDate => DateTime.t | nil,
    :updateCategory => String.t | nil,
    :category => String.t | nil,
    :targetCategories => [String.t] | nil
  }
end

defimpl Poison.Decoder, for: RefinitivWorldCheckOneAPI.Model.AbstractAssociate do
  def decode(value, _options) do
    value
  end
end

