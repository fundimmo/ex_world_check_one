# NOTE: This file is auto generated by OpenAPI Generator 6.3.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule RefinitivWorldCheckOneAPI.Model.NewCase do
  @moduledoc """
  Defines Case data that can be sent when creating a new Case. Extends [UpdateCase](#UpdateCase).
  """

  @derive [Poison.Encoder]
  defstruct [
    :caseId,
    :name,
    :providerTypes,
    :customFields,
    :secondaryFields,
    :nameTransposition,
    :note,
    :groupId,
    :entityType
  ]

  @type t :: %__MODULE__{
    :caseId => String.t | nil,
    :name => String.t,
    :providerTypes => [RefinitivWorldCheckOneAPI.Model.ProviderType.t],
    :customFields => [RefinitivWorldCheckOneAPI.Model.Field.t] | nil,
    :secondaryFields => [RefinitivWorldCheckOneAPI.Model.Field.t] | nil,
    :nameTransposition => boolean() | nil,
    :note => String.t | nil,
    :groupId => String.t,
    :entityType => String.t
  }
end

defimpl Poison.Decoder, for: RefinitivWorldCheckOneAPI.Model.NewCase do
  import RefinitivWorldCheckOneAPI.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:providerTypes, :list, RefinitivWorldCheckOneAPI.Model.ProviderType, options)
    |> deserialize(:customFields, :list, RefinitivWorldCheckOneAPI.Model.Field, options)
    |> deserialize(:secondaryFields, :list, RefinitivWorldCheckOneAPI.Model.Field, options)
  end
end

