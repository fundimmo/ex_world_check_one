# NOTE: This file is auto generated by OpenAPI Generator 6.3.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule RefinitivWorldCheckOneAPI.Model.ResultAllOf do
  @moduledoc """
  
  """

  @derive [Poison.Encoder]
  defstruct [
    :primaryName,
    :events,
    :countryLinks,
    :identityDocuments,
    :category,
    :providerType,
    :gender,
    :entityCreationDate,
    :entityModificationDate,
    :pepStatus,
    :actionTypes
  ]

  @type t :: %__MODULE__{
    :primaryName => String.t | nil,
    :events => [RefinitivWorldCheckOneAPI.Model.Event.t] | nil,
    :countryLinks => [RefinitivWorldCheckOneAPI.Model.CountryLink.t] | nil,
    :identityDocuments => [RefinitivWorldCheckOneAPI.Model.IdentityDocument.t] | nil,
    :category => String.t | nil,
    :providerType => String.t | nil,
    :gender => String.t | nil,
    :entityCreationDate => DateTime.t | nil,
    :entityModificationDate => DateTime.t | nil,
    :pepStatus => String.t | nil,
    :actionTypes => [String.t] | nil
  }
end

defimpl Poison.Decoder, for: RefinitivWorldCheckOneAPI.Model.ResultAllOf do
  import RefinitivWorldCheckOneAPI.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:events, :list, RefinitivWorldCheckOneAPI.Model.Event, options)
    |> deserialize(:countryLinks, :list, RefinitivWorldCheckOneAPI.Model.CountryLink, options)
    |> deserialize(:identityDocuments, :list, RefinitivWorldCheckOneAPI.Model.IdentityDocument, options)
  end
end

