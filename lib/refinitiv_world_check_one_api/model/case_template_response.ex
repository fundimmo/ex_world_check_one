# NOTE: This file is auto generated by OpenAPI Generator 6.3.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule RefinitivWorldCheckOneAPI.Model.CaseTemplateResponse do
  @moduledoc """
  Case template, containing metadata required by the client to construct a valid Case
  """

  @derive [Poison.Encoder]
  defstruct [
    :groupScreeningType,
    :groupId,
    :customFields,
    :secondaryFieldsByProvider,
    :mandatoryProviderTypes
  ]

  @type t :: %__MODULE__{
    :groupScreeningType => RefinitivWorldCheckOneAPI.Model.GroupScreeningType.t,
    :groupId => String.t,
    :customFields => [RefinitivWorldCheckOneAPI.Model.FieldDefinition.t] | nil,
    :secondaryFieldsByProvider => %{optional(String.t) => RefinitivWorldCheckOneAPI.Model.SecondaryFieldsByEntity.t} | nil,
    :mandatoryProviderTypes => [RefinitivWorldCheckOneAPI.Model.ProviderType.t] | nil
  }
end

defimpl Poison.Decoder, for: RefinitivWorldCheckOneAPI.Model.CaseTemplateResponse do
  import RefinitivWorldCheckOneAPI.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:groupScreeningType, :struct, RefinitivWorldCheckOneAPI.Model.GroupScreeningType, options)
    |> deserialize(:customFields, :list, RefinitivWorldCheckOneAPI.Model.FieldDefinition, options)
    |> deserialize(:secondaryFieldsByProvider, :map, RefinitivWorldCheckOneAPI.Model.SecondaryFieldsByEntity, options)
    |> deserialize(:mandatoryProviderTypes, :list, RefinitivWorldCheckOneAPI.Model.ProviderType, options)
  end
end

