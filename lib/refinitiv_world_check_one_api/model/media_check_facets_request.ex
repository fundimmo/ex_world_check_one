# NOTE: This file is auto generated by OpenAPI Generator 6.3.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule RefinitivWorldCheckOneAPI.Model.MediaCheckFacetsRequest do
  @moduledoc """
  Facets for MediaCheckResultsRequest
  """

  @derive [Poison.Encoder]
  defstruct [
    :publicationType,
    :topicPhase,
    :geography,
    :topic,
    :country,
    :publicationDate
  ]

  @type t :: %__MODULE__{
    :publicationType => RefinitivWorldCheckOneAPI.Model.MediaCheckRegularFacetRequest.t | nil,
    :topicPhase => RefinitivWorldCheckOneAPI.Model.MediaCheckRegularFacetRequest.t | nil,
    :geography => RefinitivWorldCheckOneAPI.Model.MediaCheckRegularFacetRequest.t | nil,
    :topic => RefinitivWorldCheckOneAPI.Model.MediaCheckRegularFacetRequest.t | nil,
    :country => RefinitivWorldCheckOneAPI.Model.MediaCheckRegularFacetRequest.t | nil,
    :publicationDate => map() | nil
  }
end

defimpl Poison.Decoder, for: RefinitivWorldCheckOneAPI.Model.MediaCheckFacetsRequest do
  import RefinitivWorldCheckOneAPI.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:publicationType, :struct, RefinitivWorldCheckOneAPI.Model.MediaCheckRegularFacetRequest, options)
    |> deserialize(:topicPhase, :struct, RefinitivWorldCheckOneAPI.Model.MediaCheckRegularFacetRequest, options)
    |> deserialize(:geography, :struct, RefinitivWorldCheckOneAPI.Model.MediaCheckRegularFacetRequest, options)
    |> deserialize(:topic, :struct, RefinitivWorldCheckOneAPI.Model.MediaCheckRegularFacetRequest, options)
    |> deserialize(:country, :struct, RefinitivWorldCheckOneAPI.Model.MediaCheckRegularFacetRequest, options)
  end
end

