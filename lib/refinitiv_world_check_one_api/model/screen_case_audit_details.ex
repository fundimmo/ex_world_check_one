# NOTE: This file is auto generated by OpenAPI Generator 6.3.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule RefinitivWorldCheckOneAPI.Model.ScreenCaseAuditDetails do
  @moduledoc """
  Audit details for SCREENED_CASE action raised when a Case screening has been completed. Extends [AbstractAuditDetails](#AbstractAuditDetails).
  """

  @derive [Poison.Encoder]
  defstruct [
    :detailsType,
    :userId,
    :caseSystemId,
    :statusCode,
    :screeningState,
    :startScreeningDate,
    :noOfNewResults,
    :noOfReviewRequiredResults,
    :noOfExcludedResults,
    :noOfAutoResolvedResults,
    :providerTypes
  ]

  @type t :: %__MODULE__{
    :detailsType => String.t,
    :userId => String.t,
    :caseSystemId => String.t,
    :statusCode => String.t,
    :screeningState => String.t,
    :startScreeningDate => DateTime.t,
    :noOfNewResults => integer(),
    :noOfReviewRequiredResults => integer(),
    :noOfExcludedResults => integer(),
    :noOfAutoResolvedResults => integer(),
    :providerTypes => [RefinitivWorldCheckOneAPI.Model.ProviderType.t]
  }
end

defimpl Poison.Decoder, for: RefinitivWorldCheckOneAPI.Model.ScreenCaseAuditDetails do
  import RefinitivWorldCheckOneAPI.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:providerTypes, :list, RefinitivWorldCheckOneAPI.Model.ProviderType, options)
  end
end

