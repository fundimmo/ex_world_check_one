# NOTE: This file is auto generated by OpenAPI Generator 6.3.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule RefinitivWorldCheckOneAPI.Model.MediaCheckFacetsResponse do
  @moduledoc """
  Facets for article navigation. Use facet's `drilldownKey` to select a facet
  """

  @derive [Poison.Encoder]
  defstruct [
    :publicationTypes,
    :geographies,
    :topics,
    :topicPhases,
    :countries,
    :publicationDates
  ]

  @type t :: %__MODULE__{
    :publicationTypes => [RefinitivWorldCheckOneAPI.Model.MediaCheckRegularFacetResponse.t] | nil,
    :geographies => [[RefinitivWorldCheckOneAPI.Model.MediaCheckRegularFacetResponse.t]] | nil,
    :topics => [RefinitivWorldCheckOneAPI.Model.MediaCheckRegularFacetResponse.t] | nil,
    :topicPhases => [RefinitivWorldCheckOneAPI.Model.MediaCheckRegularFacetResponse.t] | nil,
    :countries => [RefinitivWorldCheckOneAPI.Model.MediaCheckRegularFacetResponse.t] | nil,
    :publicationDates => [RefinitivWorldCheckOneAPI.Model.MediaCheckPublicationDatesFacetResponse.t] | nil
  }
end

defimpl Poison.Decoder, for: RefinitivWorldCheckOneAPI.Model.MediaCheckFacetsResponse do
  import RefinitivWorldCheckOneAPI.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:publicationTypes, :list, RefinitivWorldCheckOneAPI.Model.MediaCheckRegularFacetResponse, options)
    |> deserialize(:topics, :list, RefinitivWorldCheckOneAPI.Model.MediaCheckRegularFacetResponse, options)
    |> deserialize(:topicPhases, :list, RefinitivWorldCheckOneAPI.Model.MediaCheckRegularFacetResponse, options)
    |> deserialize(:countries, :list, RefinitivWorldCheckOneAPI.Model.MediaCheckRegularFacetResponse, options)
    |> deserialize(:publicationDates, :list, RefinitivWorldCheckOneAPI.Model.MediaCheckPublicationDatesFacetResponse, options)
  end
end

