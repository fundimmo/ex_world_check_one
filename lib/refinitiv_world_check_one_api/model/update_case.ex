# NOTE: This file is auto generated by OpenAPI Generator 6.3.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule RefinitivWorldCheckOneAPI.Model.UpdateCase do
  @moduledoc """
  Defines Case data that can be sent when updating a Case.  Note that availability and definitions of `customFields` and `secondaryFields` should be obtained via `groups/{groupId}/caseTemplate` before creating or updating a Case. Following are some example JSON segments for secondary fields using unreal `typeId`s for illustrative purposes.  - Example INDIVIDUAL secondary fields       1. GENDER          ```           {             \"typeId\":\"SFCT_1\",             \"value\":\"MALE\"           }          ```       2. DATE_OF_BIRTH          ```           {             \"typeId\":\"SFCT_2\",             \"dateTimeValue\":\"1990-12-20\"           }          ```          or          ```           {             \"typeId\":\"SFCT_2\",             \"dateTimeValue\": {               \"timelinePrecision\": \"ON\",               \"pointInTimePrecision\": \"DAY\",               \"utcDateTime\": 316310400000,               \"timeZone\": null             }           }          ```       3. COUNTRY_OF_RESIDENCE          ```           {             \"typeId\":\"SFCT_3\",             \"value\":\"GBR\"           }          ```       4. PLACE_OF_BIRTH          ```           {             \"typeId\":\"SFCT_4\",             \"value\":\"GBR\"           }          ```       5. NATIONALITY          ```           {             \"typeId\":\"SFCT_5\",             \"value\":\"GBR\"           }          ``` - Example ORGANISATION secondary fields       1. REGISTERED_COUNTRY          ```           {             \"typeId\":\"SFCT_6\",             \"value\":\"GBR\"           }          ``` - Example VESSEL secondary fields       1. IMO_NUMBER          ```           {             \"typeId\":\"SFCT_7\",             \"value\":\"1234567\"           }          ``` 
  """

  @derive [Poison.Encoder]
  defstruct [
    :caseId,
    :name,
    :providerTypes,
    :customFields,
    :secondaryFields,
    :nameTransposition,
    :note
  ]

  @type t :: %__MODULE__{
    :caseId => String.t | nil,
    :name => String.t,
    :providerTypes => [RefinitivWorldCheckOneAPI.Model.ProviderType.t],
    :customFields => [RefinitivWorldCheckOneAPI.Model.Field.t] | nil,
    :secondaryFields => [RefinitivWorldCheckOneAPI.Model.Field.t] | nil,
    :nameTransposition => boolean() | nil,
    :note => String.t | nil
  }
end

defimpl Poison.Decoder, for: RefinitivWorldCheckOneAPI.Model.UpdateCase do
  import RefinitivWorldCheckOneAPI.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:providerTypes, :list, RefinitivWorldCheckOneAPI.Model.ProviderType, options)
    |> deserialize(:customFields, :list, RefinitivWorldCheckOneAPI.Model.Field, options)
    |> deserialize(:secondaryFields, :list, RefinitivWorldCheckOneAPI.Model.Field, options)
  end
end

