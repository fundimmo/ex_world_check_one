# NOTE: This file is auto generated by OpenAPI Generator 6.3.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule RefinitivWorldCheckOneAPI.Api.Audit do
  @moduledoc """
  API calls for all endpoints tagged `Audit`.
  """

  alias RefinitivWorldCheckOneAPI.Connection
  import RefinitivWorldCheckOneAPI.RequestBuilder

  @doc """
  Get a filtered list of AuditEvents for a Case by its caseSystemId
  Return all audit events related to cases visible to the current user. To get all audit events initial request with no payload should be provided. Also, caller may filter and sort the response by:  **eventDate**: The time when the Audit Event was created (ISO 8601 format excluding Week and Ordinal dates)         e.g. eventDate>=2010-07-28T22:25:51Z;eventDate<2015-07-28T22:25:51Z  Note: When the audit is requested without any date range in the query, it returns the audit data **for the last 168 hours by default**.  **actionType**: Signifies the event links to a Case object.           Please refer to ``ActionType`` object for detailed description.         e.g. actionType=='ASSIGN_CASE'             actionType=in=('ASSIGN_CASE', 'NEW_MATCH')   **actionedByUserId**: Identifier of the User who created this audit event.            Please refer to ``AuditEvent/properties/actionedByUserId`` for detailed description.         e.g. actionedByUserId==663b4481-5b45-40a4-8b76-54ef805beea5   **The above criteria can also be combined**         e.g. eventDate>=20120915T155300;eventDate<=2015-07-28T22:25:51Z;actionType=='NEW_MATCH'             actionedByUserId==663b4481-5b45-40a4-8b76-54ef805beea5;eventDate>=2010-07-28T22:25:51Z  **Please note that the above examples are only for the ``query`` part of the Filter** 

  ### Parameters

  - `connection` (RefinitivWorldCheckOneAPI.Connection): Connection to server
  - `authorization` (String.t): The authorization credentials including 'keyId', 'algorithm', 'headers', 'signature' (see 'Security and Authentication details' documentation section for more details)
  - `date` (String.t): The date and time at which the message was originated in 'RFC 1123' format
  - `content_type` (String.t): The media type of the request (e.g., 'application/json')
  - `content_length` (integer()): The length of the request body in octets (8-bit bytes)
  - `case_system_id` (String.t): System generated ID for the Case
  - `opts` (keyword): Optional parameters
    - `:body` (Filter): Filter the AuditEvents in the response

  ### Returns

  - `{:ok, RefinitivWorldCheckOneAPI.Model.AuditSearchResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec get_case_audit_events_by_case_system_id(Tesla.Env.client, String.t, String.t, String.t, integer(), String.t, keyword()) :: {:ok, nil} | {:ok, RefinitivWorldCheckOneAPI.Model.AuditSearchResponse.t} | {:ok, list(RefinitivWorldCheckOneAPI.Model.Error.t)} | {:error, Tesla.Env.t}
  def get_case_audit_events_by_case_system_id(connection, authorization, date, content_type, content_length, case_system_id, opts \\ []) do
    optional_params = %{
      :body => :body
    }

    request =
      %{}
      |> method(:post)
      |> url("/cases/#{case_system_id}/auditEvents")
      |> add_param(:headers, :Authorization, authorization)
      |> add_param(:headers, :Date, date)
      |> add_param(:headers, :"Content-Type", content_type)
      |> add_param(:headers, :"Content-Length", content_length)
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, %RefinitivWorldCheckOneAPI.Model.AuditSearchResponse{}},
      {400, [%RefinitivWorldCheckOneAPI.Model.Error{}]},
      {401, false},
      {404, [%RefinitivWorldCheckOneAPI.Model.Error{}]},
      {415, false},
      {429, false},
      {500, [%RefinitivWorldCheckOneAPI.Model.Error{}]}
    ])
  end
end
